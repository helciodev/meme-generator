{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","components/App.js","index.js"],"names":["Header","src","alt","MemeGenerator","props","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleGenerate","fetch","then","response","json","memes","data","setState","event","target","name","value","this","preventDefault","generatedRandomImg","Math","ceil","random","url","className","type","placeholder","onChange","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qKAWeA,MATf,WACI,OACE,mCACC,qBAAKC,IAAI,iEAAiEC,IAAI,iBAC9E,mD,0CC2EQC,E,kDA7Eb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBATN,E,qDAYlB,WAAqB,IAAD,OAEhBE,MADY,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAM,SAAAC,GAAc,IACxDE,EAASF,EAASG,KAAlBD,MACP,EAAKE,SAAS,CAACV,YAAaQ,S,0BAShC,SAAaG,GAAQ,IAAD,EACIA,EAAMC,OAArBC,EADW,EACXA,KAAMC,EADK,EACLA,MACbC,KAAKL,SAAL,eACGG,EAAOC,M,4BAId,SAAeH,GACbA,EAAMK,iBACN,IAAMC,EAAqBF,KAAKnB,MAAMI,YAAYkB,KAAKC,KAAqB,IAAhBD,KAAKE,SAAiB,IAAIC,IACtFN,KAAKL,SAAS,CACZX,YAAakB,M,oBAKjB,WAEE,OACE,qCACA,uBAAMK,UAAU,YAAhB,UACA,6CAEE,uBACAC,KAAK,OACLV,KAAK,UACLW,YAAY,WACZV,MAAOC,KAAKnB,MAAMC,QAClB4B,SAAUV,KAAKd,kBAEf,iDAEA,uBACAsB,KAAK,OACLV,KAAK,aACLC,MAAOC,KAAKnB,MAAME,WAClB0B,YAAY,cACZC,SAAUV,KAAKd,kBAGjB,wBAAQyB,QAASX,KAAKZ,eAAtB,8BAEA,sBAAKmB,UAAU,OAAf,UACE,qBAAK9B,IAAKuB,KAAKnB,MAAMG,YAAaN,IAAI,KACtC,oBAAI6B,UAAU,MAAd,SAAqBP,KAAKnB,MAAMC,UAChC,oBAAIyB,UAAU,SAAd,SAAwBP,KAAKnB,MAAME,uB,GAxEf6B,a,MCabC,MAVf,WACE,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCNJC,EAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.fd3d9adf.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return(\n      <header>\n       <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"a troll face\"/>\n       <p>meme generator</p>\n      </header>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass MemeGenerator extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      topText: '',\n      bottomText: '',\n      randomImage: 'http://i.imgflip.com/1bij.jpg',\n      allMemeImgs: '',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleGenerate = this.handleGenerate.bind(this)\n  }\n\n  componentDidMount() {\n      const api = 'https://api.imgflip.com/get_memes';\n      fetch(api).then(response => response.json()).then( response  => {\n        const {memes} = response.data \n        this.setState({allMemeImgs: memes})\n        // console.log(this.state.allMemeImgs)\n       } )\n        \n    }\n      /**\n        * Create the onChagne handler method\n        * It should update the corresponding state on every change of the input box\n        */\n    handleChange(event) {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n    }\n\n  handleGenerate(event) {\n    event.preventDefault()\n    const generatedRandomImg = this.state.allMemeImgs[Math.ceil(Math.random() * 100 + 1)].url\n    this.setState({\n      randomImage: generatedRandomImg\n    })\n    \n  }\n\n  render() {\n\n    return(\n      <>\n      <form className=\"meme-form\">\n      <label>\n      topText:\n        <input\n        type=\"text\"\n        name=\"topText\" \n        placeholder=\"top text\" \n        value={this.state.topText} \n        onChange={this.handleChange} />\n        </label>\n        <label>\n        bottom text:\n        <input \n        type=\"text\"\n        name=\"bottomText\" \n        value={this.state.bottomText} \n        placeholder=\"bottom text\" \n        onChange={this.handleChange} />\n        </label>\n     \n      <button onClick={this.handleGenerate}>Generate meme</button>\n      </form>\n      <div className=\"meme\">\n        <img src={this.state.randomImage} alt=\"\"/>\n        <h2 className=\"top\">{this.state.topText}</h2>\n        <h2 className=\"bottom\">{this.state.bottomText}</h2>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default MemeGenerator;","import React from 'react';\nimport Header from './Header';\nimport MemeGenerator from './MemeGenerator';\nimport '../style.css';\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <MemeGenerator/>\n    </>\n    \n  )\n}\n\nexport default App;","import App from './components/App';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}